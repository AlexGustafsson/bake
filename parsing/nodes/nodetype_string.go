// Code generated by "stringer -type=NodeType"; DO NOT EDIT.

package nodes

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeTypeSourceFile-0]
	_ = x[NodeTypePackageDeclaration-1]
	_ = x[NodeTypeImportsDeclaration-2]
	_ = x[NodeTypeComment-3]
	_ = x[NodeTypeInterpretedString-4]
	_ = x[NodeTypeRawString-5]
	_ = x[NodeTypeVariableDeclaration-6]
	_ = x[NodeTypeIdentifier-7]
	_ = x[NodeTypeInteger-8]
	_ = x[NodeTypeSignature-9]
	_ = x[NodeTypeFunctionDeclaration-10]
	_ = x[NodeTypeRuleFunctionDeclaration-11]
	_ = x[NodeTypeBlock-12]
	_ = x[NodeTypeSelector-13]
	_ = x[NodeTypeImportSelector-14]
	_ = x[NodeTypeIndex-15]
	_ = x[NodeTypeInvokation-16]
	_ = x[NodeTypeIncrement-17]
	_ = x[NodeTypeDecrement-18]
	_ = x[NodeTypeLooseAssignment-19]
	_ = x[NodeTypeAdditionAssignment-20]
	_ = x[NodeTypeSubtractionAssignment-21]
	_ = x[NodeTypeMultiplicationAssignment-22]
	_ = x[NodeTypeDivisionAssignment-23]
	_ = x[NodeTypeShellStatement-24]
	_ = x[NodeTypeAssignment-25]
	_ = x[NodeTypeComparison-26]
	_ = x[NodeTypeEquality-27]
	_ = x[NodeTypeFactor-28]
	_ = x[NodeTypePrimary-29]
	_ = x[NodeTypeTerm-30]
	_ = x[NodeTypeUnary-31]
	_ = x[NodeTypeAliasDeclaration-32]
	_ = x[NodeTypeRuleDeclaration-33]
	_ = x[NodeTypeReturnStatement-34]
}

const _NodeType_name = "NodeTypeSourceFileNodeTypePackageDeclarationNodeTypeImportsDeclarationNodeTypeCommentNodeTypeInterpretedStringNodeTypeRawStringNodeTypeVariableDeclarationNodeTypeIdentifierNodeTypeIntegerNodeTypeSignatureNodeTypeFunctionDeclarationNodeTypeRuleFunctionDeclarationNodeTypeBlockNodeTypeSelectorNodeTypeImportSelectorNodeTypeIndexNodeTypeInvokationNodeTypeIncrementNodeTypeDecrementNodeTypeLooseAssignmentNodeTypeAdditionAssignmentNodeTypeSubtractionAssignmentNodeTypeMultiplicationAssignmentNodeTypeDivisionAssignmentNodeTypeShellStatementNodeTypeAssignmentNodeTypeComparisonNodeTypeEqualityNodeTypeFactorNodeTypePrimaryNodeTypeTermNodeTypeUnaryNodeTypeAliasDeclarationNodeTypeRuleDeclarationNodeTypeReturnStatement"

var _NodeType_index = [...]uint16{0, 18, 44, 70, 85, 110, 127, 154, 172, 187, 204, 231, 262, 275, 291, 313, 326, 344, 361, 378, 401, 427, 456, 488, 514, 536, 554, 572, 588, 602, 617, 629, 642, 666, 689, 712}

func (i NodeType) String() string {
	if i < 0 || i >= NodeType(len(_NodeType_index)-1) {
		return "NodeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeType_name[_NodeType_index[i]:_NodeType_index[i+1]]
}
