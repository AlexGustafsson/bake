(function(e){e.languages.bake={comment:/\/\/.*/,"raw-string":{pattern:/`[\s\S\n]*`/,greedy:!0,alias:"string"},keyword:/\b(package|import|func|rule|export|if|else|return|shell|let)\b/,boolean:/\b(?:true|false)\b/,number:/\b((0x[0-9a-fA-F]+)|(0[0-7]+i?)|(\d+([Ee]\d+)?i?)|(\d+[Ee][-+]\d+i?))\b/i,function:/[a-zA-Z_]\w*(?=\()/,punctuation:/[()[\]{}:,.$@]/,operator:/--|\+\+|==|!=|<=|>=|&&|\|\||!|[+-/*%?]?=|\+|\-|\*|\/|%/,builtin:/\b(context)\b/};var t={"template-punctuation":{pattern:/^"|"$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\((?:[^()]|\((?:[^()]|\([^)]*\))*\))+\)/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\(|\)$/,alias:"punctuation"},rest:e.languages.bake}},entity:/\\([0-7]{3}|[abfnrtv"$]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/,string:/[\s\S]+/};e.languages.insertBefore("bake","raw-string",{"evaluated-string":{pattern:/"(?:\\[\s\S]|\$\((?:[^()]|\((?:[^()]|\([^)]*\))*\))+\)|(?!\$\()[^\\"])*"/,greedy:!0,inside:t},shell:{pattern:/(shell).*/,greedy:!0,lookbehind:!0,inside:t}})})(Prism);
//# sourceMappingURL=prism-bake.min.js.map
